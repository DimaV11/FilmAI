import telebot
from telebot import types
from logic import GigaChatAPI
from config import CLIENT_SECRET, TOKEN, MODEL

api = GigaChatAPI(CLIENT_SECRET, MODEL)
bot = telebot.TeleBot(TOKEN)

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
search = types.KeyboardButton("üîé –ü–æ–∏—Å–∫")
help_btn = types.KeyboardButton("üÜò –ü–æ–º–æ—â—å")
info_btn = types.KeyboardButton("üìÑ –ò–Ω—Ñ–æ")
markup.add(search, help_btn, info_btn)

waiting = set()

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        "üé¨ –ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∏–Ω–æ –∏ —Å–µ—Ä–∏–∞–ª–∞–º. \n"
        "–ù–∞–∂–º–∏ 'üîé –ü–æ–∏—Å–∫', —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—ã –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é! ü§©\n"
        "–ò–ª–∏ –≤—ã–±–µ—Ä–∏ 'üÜò –ü–æ–º–æ—â—å' –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. \n"
        "–¢–∞–∫–∂–µ, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –Ω–∞ 'üìÑ –ò–Ω—Ñ–æ', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ!ü§ñ",
        reply_markup=markup,
        parse_mode="Markdown"
    )

@bot.message_handler(func=lambda m: m.text == 'üìÑ –ò–Ω—Ñ–æ')
def info(message):
    bot.send_message(
        message.chat.id,
        'ü§ñ FilmAI - –ù–æ–≤–µ–π—à–∏–π –±–æ—Ç-—ç–∫—Å–ø–µ—Ä—Ç –≤ —Å—Ñ–µ—Ä–µ –ö–∏–Ω–æ–∏–Ω–¥—É—Å—Ç—Ä–∏–∏! \n\n'
        ' -----------------–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è----------------- \n'
        ' - –í–µ—Ä—Å–∏—è –±–æ—Ç–∞: 0.3 \n'
        ' - –ì–∏—Ç-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/DimaV11/FilmAI/ \n'
        ' - –ù–µ–π—Ä–æ—Å–µ—Ç—å: GigaChat 2\n'
        ' - –ê–≤—Ç–æ—Ä—ã: @sirdezzan , @d42521 \n'
        ' ------------------------------------------------------------------------'
        )

@bot.message_handler(func=lambda m: m.text == 'üîé –ü–æ–∏—Å–∫')
def start_search(message):
    waiting.add(message.chat.id)
    bot.send_message(
        message.chat.id,
        "–û—Ç–ø—Ä–∞–≤—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∂–∞–Ω—Ä, —Å—é–∂–µ—Ç –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ).",
        reply_markup=types.ReplyKeyboardRemove(),
        parse_mode="Markdown"
    )

@bot.message_handler(func=lambda m: m.text == 'üÜò –ü–æ–º–æ—â—å')
def help_message(message):
    bot.send_message(
        message.chat.id,
        "üÜò –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º—ã –∏ —Å–µ—Ä–∏–∞–ª—ã! \n"
        "1. –ù–∞–∂–º–∏ *üîé –ü–æ–∏—Å–∫* –∏ –æ–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, '—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞ –ø—Ä–æ –∫–æ—Å–º–æ—Å' –∏–ª–∏ '—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–µ–¥–∏—è'). \n"
        "2. –Ø –Ω–∞–π–¥—É 3-5 —Ñ–∏–ª—å–º–æ–≤ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª–æ–≤ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–º. \n"
        "3. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–ø–∏—à–∏ *üîé –ü–æ–∏—Å–∫* –µ—â–µ —Ä–∞–∑!",
        reply_markup=markup,
        parse_mode="Markdown"
    )

@bot.message_handler(func=lambda m: True)
def handle(message):
    if message.chat.id in waiting:
        bot.send_chat_action(message.chat.id, 'typing')
        prompt = message.text
        waiting.remove(message.chat.id)
        try:
            films = api.get_films(prompt)
            if len(films) > 4096:
                films = films[:4090] + "..."
            bot.send_message(
                message.chat.id,
                films,
                reply_markup=markup,
                parse_mode="Markdown"
            )
        except Exception as e:
            bot.send_message(
                message.chat.id,
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ *üîé –ü–æ–∏—Å–∫*!",
                reply_markup=markup,
                parse_mode="Markdown"
            )
            print(f"–û—à–∏–±–∫–∞: {e}")
    else:
        bot.send_message(
            message.chat.id,
            "–ù–∞–∂–º–∏ *üîé –ü–æ–∏—Å–∫*, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Ñ–∏–ª—å–º–æ–≤!",
            reply_markup=markup,
            parse_mode="Markdown"
        )

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
